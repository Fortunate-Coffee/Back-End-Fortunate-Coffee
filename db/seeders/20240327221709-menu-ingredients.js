'use strict';

const { Op } = require("sequelize");

const menuIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166]; // Menu IDs yang akan dihubungkan dengan bahan baku
const foodIdsArr = [
  [1, 2, 3],
  [1, 2, 3],
  [2, 4, 9, 11, 13, 102],
  [67],
  [68],
  [69],
  [70],
  [71],
  [72],
  [73],
  [74],
  [75],
  [76],
  [77],
  [78],
  [79],
  [80],
  [81],
  [82],
  [83],
  [84],
  [85],
  [86],
  [87],
  [88],
  [2, 103],
  [2, 9, 26, 11],
  [2, 9, 26, 11],
  [2, 12, 17],
  [1, 2, 13],
  [1, 2, 14],
  [1, 2, 3, 4, 15],
  [1, 2, 16, 25],
  [1, 2, 4, 25],
  [3, 4, 17],
  [2, 8, 9, 11, 17],
  [2, 104],
  [2, 12],
  [8, 9, 11, 19],
  [2, 11, 12],
  [2, 11, 13],
  [1, 2, 4, 18, 109],
  [19],
  [19],
  [20],
  [21],
  [8],
  [9],
  [17],
  [2, 4, 22],
  [2, 4, 23],
  [10],
  [30, 32, 34, 35, 37, 38, 39, 42, 46, 47, 48],
  [10, 42, 45, 47],
  [106, 42],
  [17],
  [107],
  [62, 105],
  [2, 103],
  [108],
  [23],
  [1, 3, 4, 9, 17, 23, 24],
  [24, 109],
  [96],
  [97],
  [105, 109],
  [98],
  [99],
  [100],
  [101],
  [30, 32, 34, 35, 37, 38, 39, 46, 47, 48, 110],
  [30, 32, 34, 35, 37, 38, 39, 46, 47, 48],
  [7],
  [7],
  [7],
  [7],
  [52],
  [52],
  [52],
  [52],
  [111],
  [112],
  [113],
  [114],
  [115],
  [49],
  [45, 52],
  [45, 52],
  [37, 39, 52],
  [111],
  [116],
  [32],
  [46],
  [50],
  [47],
  [48],
  [39],
  [41],
  [33],
  [34],
  [35],
  [44],
  [36],
  [37],
  [38],
  [31],
  [43],
  [40],
  [89],
  [29],
  [30, 53],
  [31, 49, 50],
  [32, 33],
  [39, 48, 117],
  [33, 40, 48],
  [37, 39],
  [50],
  [46, 50, 51],
  [31, 39, 48],
  [33, 48, 51],
  [36, 44],
  [31, 33, 43 ],
  [33, 36, 40, 44, 48],
  [90],
  [91],
  [92],
  [93],
  [94],
  [95],
  [61, 90, 91, 94],
  [31, 61, 90, 91, 92, 93],
  [61, 62, 90, 91],
  [27, 91, 56],
  [5, 56, 61],
  [6, 31, 61, 90],
  [41, 56],
  [41, 64, 90],
  [33, 48, 91],
  [57, 66, 92],
  [2, 55],
  [2, 55],
  [56],
  [56],
  [65],
  [65],
  [58, 65],
  [3, 58, 65],
  [58, 60, 65],
  [58, 65],
  [3, 58, 65],
  [58, 60, 65],
  [54, 58],
  [54, 58],
  [58, 59],
  [58, 59],
  [28, 58],
  [28, 58],
  [118],
  [118],
  [58],
  [58],
  [3, 58, 62, 63, 119],
  [3, 53, 65],
  [33, 45],
  [31, 45],
  [65, 92],
];
const qtysArr = [ 
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1, 1, 1, 1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1, 1],
  [1, 1, 1, 1],
  [1, 1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1, 1, 1],
  [1, 1, 1, 1],
  [1, 1, 1, 1],
  [1, 1, 3],
  [1, 1, 1, 1, 1],
  [1, 1],
  [1, 1],
  [1, 1, 1, 2],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1, 1, 1],
  [5],
  [5],
  [1],
  [1],
  [3],
  [3],
  [3],
  [1, 1, 3],
  [1, 1, 3],
  [3],
  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  [1, 1, 1, 1],
  [1, 1],
  [4],
  [4],
  [3, 1],
  [2, 1],
  [3],
  [5],
  [1, 1, 1, 1, 1, 3, 1],
  [1, 2],
  [1],
  [1],
  [1, 2],
  [1],
  [1],
  [1],
  [1],
  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1],
  [1, 1],
  [1, 1],
  [1, 1, 1],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [2],
  [1],
  [2],
  [1, 1],
  [1, 1, 1],
  [1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1],
  [2],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1],
  [1, 1, 1],
  [1, 1, 1, 1, 1],
  [3],
  [3],
  [3],
  [3],
  [3],
  [1],
  [1, 1, 1, 1],
  [1, 1, 2, 2, 2, 2],
  [1, 1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [2, 1, 1, 1],
  [2, 1],
  [2, 1, 1],
  [1, 1, 2],
  [1, 1, 2],
  [2, 1],
  [2, 1],
  [2],
  [2],
  [2],
  [2],
  [1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1],
  [1, 1],
  [1, 1],
  [1, 1],
  [1, 1],
  [1, 1],
  [2],
  [2],
  [2],
  [2],
  [1, 1, 1, 1, 1],
  [1, 1, 1],
  [1, 1],
  [1, 1],
  [1, 1],
];

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up (queryInterface, Sequelize) {
    const timestamp = new Date();
    let menuIngredients = [];
    console.log("Length of menuIds:", menuIds.length);
    console.log("Length of foodIdsArr:", foodIdsArr.length);
    console.log("Length of qtysArr:", qtysArr.length);

    for (let i = 0; i < foodIdsArr.length; i++) {
      const foodIdLength = foodIdsArr[i].length;
      const qtyLength = qtysArr[i].length;
      if (foodIdLength !== qtyLength) {
        console.log(`Ketidaksesuaian panjang pada index ${i}:`);
        console.log(`Panjang foodIdsArr[${i}]: ${foodIdLength}`);
        console.log(`Panjang qtysArr[${i}]: ${qtyLength}`);
      }
    }

    // Loop melalui setiap menu ID
    for (let i = 0; i < menuIds.length; i++) {
      const menuId = menuIds[i];
      const foodId = foodIdsArr[i];
      const qty = qtysArr[i];

      // Loop melalui setiap bahan baku yang akan dihubungkan dengan menu ini
      for (let j = 0; j < foodId.length; j++) {
        const menuIngredient = {
          menu_id: menuId,
          food_ingredients_id: foodId[j],
          menu_ingredients_qty: qty[j],
          createdAt: timestamp,
          updatedAt: timestamp
        };

        menuIngredients.push(menuIngredient);
      }
    }

    // Masukkan data menu ingredients ke dalam tabel 'menu_ingredients'
    await queryInterface.bulkInsert('menu_ingredients', menuIngredients, {});
  },

  async down (queryInterface, Sequelize) {
    // Hapus semua data dari tabel 'menu_ingredients' ketika rollback
    await queryInterface.bulkDelete('menu_ingredients', null, {});
  }
};
